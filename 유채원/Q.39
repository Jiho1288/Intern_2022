'''
심술쟁이 수는 2,3,5의 곱으로 만들 수 있는 수이다. 다음과 같은 순서의 수가 11개의 심술쟁이 수이다.
1,2,3,4,5,6,8,9,10,12,15,....
처음 수는 1로 시작하도록 한다. 입력은 받지 않고, <number> 에 1500번째 심술쟁이 수가 출력되게 한다.
Sample Output
The 1500'th ugly number is <number>.
답
859963392
(1550번째는 1093500000, 십만번째는 290142196707511001929482240000000000000)
'''
"""
========================================================================
과제1. 숫자 2,3,5의 곱으로 만들 수 있는 수 작은 순서대로 11개를 출력하시오. 
      - 출력 : 1,2,3,4,5,6,8,9,10,12,15
========================================================================
"""
def project_1():
      lst=[1,2,3,5] #미리 1,2,3,5를 배치
      for i in range(30): #최소공배수 만큼 반복
            if 2*lst[i] not in lst: #아래 코드와 유사하게 짜려다 보니 속도가 너무 느려져서 lst 안에 곱한 값이 없는 경우 값을 추가하도록 만듦
                  lst.append(2*lst[i])
            if 3*lst[i] not in lst:
                  lst.append(3*lst[i])
            if 5*lst[i] not in lst:
                  lst.append(5*lst[i])
            lst.sort() #값을 오름차순으로 정리

      print(lst[0:11]) #11까지 출력

"""
========================================================================
과제2. 숫자 2,3,5의 곱으로 만들 수 있는 수를 오름차순으로 정렬할 경우 1550번째 값을 구하시오. 
      - 출력 : 1,093,500,000
========================================================================
"""
def project_2():
      lst=[1] #1 배치
      for num in lst: 
            if 2*num not in lst:
                  lst.append(2*num)
            if 3*num not in lst:
                  lst.append(3*num)
            if 5*num not in lst:
                  lst.append(5*num)
            lst.sort()

            if len(lst)>2000:
                  break

      print(lst[1549]) #1550번째 수 출력




if __name__ == "__main__":
    #project_1()
    project_2()
