'''
다음과 같은 형태의 배열을
[a1,a2,a3...,an,b1,b2...bn]
다음과 같은 형태로 바꾸시오
[a1,b1,a2,b2.....an,bn]
'''
"""
========================================================================
과제1. 아래와 같은 입력값을 넣을 경우 출력값을 도출하는 알고리즘을 구성하시오.  
      - 조건1. 람다식 사용 X
      - input_list = ['a1','a2','a3','a4','a5','a6','b1','b2','b3','b4','b5','b6']
      - 출력값 = ['a1','b1','a2','b2','a3','b3','a4','b4','a5','b5','a6','b6']
========================================================================
"""
def project_1():
      lst = list(input('input_list = ').split(','))
      cnt = 1 #수를 세어주기 위함
      for i in range(len(lst)): #리스트의 길이만큼 반복
            if (i+1) % 2 == 1: #해당 값을 2로 나누었을 때, 나머지가 1이라면
                  lst[i] = 'a'+str(cnt) #a에 cnt값 붙여줌
            else:
                  lst[i] = 'b'+str(cnt) #b에 cnt값 붙임
                  cnt += 1 #수를 추가해줌
                  
      print(lst)







"""
========================================================================
과제2. 아래와 같은 입력값을 넣을 경우 출력값을 도출하는 알고리즘을 구성하시오.  
      - 조건1. 람다식 필수적 사용
      - input_list = ['a1','a2','a3','a4','a5','a6','b1','b2','b3','b4','b5','b6']
      - 출력값 = ['a1','b1','a2','b2','a3','b3','a4','b4','a5','b5','a6','b6']
========================================================================
"""
def project_2():
      lst = list(input('input_list = ').split(',')) # , 기준으로 값을 분리
      print(sorted(lst, key=lambda k: int(k[1:]))) # 첫번째부터 끝까지 오름차순 정렬




"""
========================================================================
과제3. 아래와 같은 입력값을 넣을 경우 출력값을 도출하는 알고리즘을 구성하시오.  
      - 조건1. 람다식 사용 X
      - input_list = ['b1','a2','b3','a4','b5','a6','a1','b2','b4','a3','a5','b6']
      - 출력값 = ['a1','b1','a2','b2','a3','b3','a4','b4','a5','b5','a6','b6']
========================================================================
"""
def project_3():
      lst = list(input('input_list = ').split(','))
      lst.sort() #순서를 오름차순으로 정리해줌
      cnt = 1 #수를 세어주기 위함
      for i in range(len(lst)): #리스트의 길이만큼 반복
            if (i+1) % 2 == 1: #해당 값을 2로 나누었을 때, 나머지가 1이라면
                  lst[i] = 'a'+str(cnt) #a에 cnt값 붙여줌
            else:
                  lst[i] = 'b'+str(cnt) #b에 cnt값 붙임
                  cnt += 1 #수를 추가해줌
            
      print(lst)



"""
========================================================================
과제4. 아래와 같은 입력값을 넣을 경우 출력값을 도출하는 알고리즘을 구성하시오.  
      - 조건1. 람다식 필수적 사용
      - input_list = ['b1','a2','b3','a4','b5','a6','a1','b2','b4','a3','a5','b6']
      - 출력값 = ['a1','b1','a2','b2','a3','b3','a4','b4','a5','b5','a6','b6']
========================================================================
"""
def project_4():
      lst = list(input('input_list = ').split(','))
      lst.sort() #값의 순서가 섞여있어 먼저 오름차순 정리 리스트를 만듦
      print(sorted(lst, key=lambda k: int(k[1:]))) #그 뒤에 다시 정렬






if __name__ == "__main__":
    project_1()
    #project_2()
    #project_3()
    #project_4()
