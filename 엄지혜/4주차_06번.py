#=============================================================================
#위 그림은 {5,2,4,6,1,3} 이라는 배열을 소트하는 방법을 보여준다.
#배열의 두번째 인덱스부터 시작하여 시작한 인덱스(검정색 블록) 좌측의 항목 중 자신이 들어가야 할 위치를 판단(소트되도록)하여 이동 한다.
#좌측의 배열 요소들은 본인보다 좌측에 값이 삽입되어 들어올 경우 한칸씩 우측으로 이동한다. 단, 삽입되어 들어오는 요소(그림에서 검정색 블록)가 있던 인덱스(원래의 위치)까지만 이동한다.
#마지막 인덱스까지 위 과정을 반복한다.
#이와 같은 기능을 하는 소트 프로그램을 작성하시오.
#그림 설명 : http://codingdojang.com/scode/443?answer_mode=hide
#=============================================================================
#과제 1. 위 문제의 알고리즘으로 배열을 정렬하시오. 
#       - 조건 : 결과값을 저장하기 위해 새로운 리스트를 생성할 수 없다.
#       - input = [5,2,6]
#       - 출력 : [2,5,6]

#과제 1 풀이
LIST = input("input = ").split(',')                 # input으로 받은 외부값을 splist를 이용해 ','를 기준으로 나누어 LIST에 저장
for i in range(1, len(LIST)):                       # for문을 이용하여 i를 1부터 LIST의 길이 -1 만큼 반복
    for j in range(i):                              # for문을 이용해 j를 i만큼 반복
        if LIST[j] < LIST[i]:                       # if를 이용해 LIST[j]가 LIST[i]보다 작으면
            pass                                    # 패스
        else:                                       # else : if문의 반대/LIST[j]가 LIST[i]보다 크면
            LIST.insert(j, LIST[i])                 # LIST에 insert를 이용해 글자 삽입
            LIST = LIST[:(i + 1)] + LIST[(i + 2):]  # LIST에 i+1값을 한칸씩 띄운 리스트와 +2값을 한칸씩 띄운 리스트 저장
            break                                   # break로 구문 탈출
print(LIST)                                         #결과값 프린트

#=============================================================================
#과제 2. 위 문제의 알고리즘으로 배열을 정렬하시오
#       - 조건 : 결과값을 저장하기 위해 새로운 리스트를 생성할 수 없다.
#       - input = [5,2,4,6,1,3]
#       - 출력 : [1,2,3,4,5,6]

#과제 2 풀이
LIST = input("input = ").split(',')                 # input으로 받은 외부값을 splist를 이용해 ','를 기준으로 나누어 LIST에 저장
for i in range(1, len(LIST)):                       # for문을 이용하여 i를 1부터 LIST의 길이 -1 만큼 반복
    for j in range(i):                              # for문을 이용해 j를 i만큼 반복
        if LIST[j] < LIST[i]:                       # if를 이용해 LIST[j]가 LIST[i]보다 작으면
            pass                                    # 패스
        else:                                       # else : if문의 반대/LIST[j]가 LIST[i]보다 크면
            LIST.insert(j, LIST[i])                 # LIST에 insert를 이용해 글자 삽입
            LIST = LIST[:(i + 1)] + LIST[(i + 2):]  # LIST에 i+1값을 한칸씩 띄운 리스트와 +2값을 한칸씩 띄운 리스트 저장
            break                                   # break로 구문 탈출
print(LIST)                                         #결과값 프린트

#=============================================================================
