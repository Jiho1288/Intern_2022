#========================================================================
#심술쟁이 수는 2,3,5의 곱으로 만들 수 있는 수이다. 다음과 같은 순서의 수가 11개의 심술쟁이 수이다.
#1,2,3,4,5,6,8,9,10,12,15,....
#처음 수는 1로 시작하도록 한다. 입력은 받지 않고, <number> 에 1500번째 심술쟁이 수가 출력되게 한다.

#Sample Output
#The 1500'th ugly number is <number>.

#답
#859963392
#(1550번째는 1093500000, 십만번째는 290142196707511001929482240000000000000)
#========================================================================
#과제1. 숫자 2,3,5의 곱으로 만들 수 있는 수 작은 순서대로 11개를 출력하시오. 
#      - 출력 : 1,2,3,4,5,6,8,9,10,12,15

#과제 1 풀이
ugly_list = [1] #심술쟁이 수 리스트, 처음엔 1로 시작
while len(ugly_list) != 11 :  #요소가 11개가 될 때까지 반복
      num_list = []  #2,3,5로 곱한 수 넣을 리스트
      for num in ugly_list: #요소 꺼냄
            for multi in num * 2, num * 3, num * 5:  #2,3,5로 곱한 수를 차례대로 대입
                  if multi > ugly_list[-1]: #곱한 수가 심술쟁이 수 리스트의 마지막 요소보다 클 때만
                        num_list.append(multi) #리스트에 추가
      ugly_list.append(min(num_list)) #가장 작은 수를 심술쟁이 수 리스트에 추가
print(*ugly_list, sep = ',')  #압축 풀고 모든 요소를 콤마로 분리하여 반환
#========================================================================
#과제2. 숫자 2,3,5의 곱으로 만들 수 있는 수를 오름차순으로 정렬할 경우 1550번째 값을 구하시오. 
#      - 출력 : 1,093,500,000

#과제 2 풀이
ugly_list2 = [1]                                      #ugly_list2에 리스트에 1을 할당하여 생성 
while len(ugly_list2) != 1550:                        #while문을 이용해 ugly_list2의 길이가 1550개 될 때까지 반복
      num_list = []                                   #num_list명의 빈 리스트 생성
      for num in ugly_list2:                          #for문을 이용해 num을 ugly_list2만큼 반복
            for multi in num * 2, num * 3, num * 5 :  #for문을 이용해 multi를 num * 2, num * 3, num * 5값까지 반복
                  if multi > ugly_list2[-1]:          #if문을 이용해 multi > ugly_list2dp -1를 대입한 값이라면
                        num_list.append(multi)        #ugly_list2에 num_list의 최솟값을 ㅜ가
      ugly_list2.append(min(num_list))

print(format(ugly_list2[-1],','))                     #리스트를 천단위로 ','로 구분하여 출력
#========================================================================
