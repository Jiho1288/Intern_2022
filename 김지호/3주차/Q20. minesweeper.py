"""
-----------------  Question  -----------------
지뢰찾기 게임은 M x N 매트릭스에 위치해 있는 지뢰를 찾는 게임이다.
M x N 매트릭스 상의 격자(square)는 지뢰이거나 지뢰가 아니다.
지뢰 격자는 *로 표시한다. 지뢰가 아닌 격자(square)는 숫자로 표시하며 그 숫자는 인접해 있는 지뢰의 수를 의미한다.
(격자(sqaure)는 최대 8개의 인접한 지뢰를 가질 수 있다.)
다음은 4x4 매트릭스에서 2개의 지뢰(*)를 표시하는 방법이다.
 *...
 ....
 .*..
 ....

이 게임의 목표는 지뢰의 위치(*)를 제외한 나머지 격자들의 숫자를 맞추는 것이다.
위 경우의 답은 아래와 같다.
 *100
 2210
 1*10
 1110

입력 : 첫번째 줄은 M x N 의 M(행)과 N(열)에 해당되는 숫자이다.
       N과 M은 0보다 크고 100 이하이다(0< N, M <=100).
       그 다음 M개의 줄이 차례로 입력되고 각 줄은 정확하게 N개의 문자가 입력된다.
       지뢰 격자는 *로 표시하며 지뢰가 아닌 격자는 .(dot)로 표시한다.
출력 : 지뢰(*)를 제외한 나머지 격자의 숫자값을 찾아서 M x N 매트릭스를 출력한다.
----------------------------------------------
"""

"""
==========================================================================
과제 1. input의 숫자만큼 '*'과 '.'으로 구성된 문자열을 출력하시오. 
      - 조건1 : random 모듈을 활용하시오.
      - input = '4'
      - 출력 : *.** 또는 ...* 등등
==========================================================================
"""

print("=====과제1=====")

import random                       #random모듈 import

n = int(input("input="))            #n값에 input입력받음

result = ''                         #결과에 대한 문자열 초기화

for i in range(n):                  #for반복문을 이용하여 n번 만큼, 빈문자열에 .과*중에 랜덤한 값 추가
    a = random.choice("*.")
    result += a

print(result)


"""
==========================================================================
과제 2. 행과 열을 입력하면 '*'과 '.'으로 구성된 행렬을 출력하시오.
      - 조건1 : random 모듈을 활용하시오.
      - 조건2 : 행과 열은 1보다 크고 100 이하인 정수이다.
      - row = 3
      - column = 6
      - 출력 (예시이며 random 모듈을 사용하였으므로 결과는 다를 수 있음.)
        [['*', '.', '.', '.', '*', '.'], 
        ['.', '.', '*', '.', '.', '.'],
        ['.', '.', '.', '*', '.', '*']]
==========================================================================
"""

print("=====과제2=====")

import random                       #random모듈 import

row = int(input("row="))            # 열과 행값1을 각각 row와 column 변수애 입력
column = int(input("column="))

result=[]                           # 2차원 list 생성을 위한 list 초기화                 
for j in range(row):                # 과제1에서 row값에 대해 반복문 추가
    col_result = []                 # 행 list 생성
    for i in range(column):
        a = random.choice("*.")
        col_result.append(a)        # a를 행 list에 추가
    result.append(col_result)       # 행 list를 2차원 list에 추가

for i in range(row):                        # 결과 출력
    print(*result[i])


"""
==========================================================================
#과제 3. 과제2에서 생성한 행렬을 이용하여 지뢰(*)를 제외한 나머지 격자의 숫자값을 찾고 행렬을 출력하시오.
      - 조건1 : random 모듈을 활용하시오.
      - 조건2 : 행과 열은 1보다 크고 100 이하인 정수이다.
      - row = 3
      - column = 6
      - 출력 (예시이며 random 모듈을 사용하였으므로 결과는 다를 수 있음.)
        *212*1
        12*332
        012*2*
==========================================================================
"""

print("=====과제3=====")


for j in range(row):
    for i in range(column):
        if result[j][i]=="*":               # 2차원 list의 요소가 *이면 skip
            continue
        else:
            result[j][i]=0                  # 2차원 list의 요소가 .일 경우 .을 int 0으로 초기화
            for k in range(j-1,j+2):        # 각 요소 주변의 8개 위치에 *이 존재할 경우 1씩추가 
                for l in range(i-1,i+2):
                    if k<0 or l<0 or k>=row or l>=column: # 2차원 배열의 범위에서 벗어나는 경우 제외
                        continue            
                    else:
                        if result[k][l]=="*":
                            result[j][i]+=1

for i in range(row):                        # 결과 출력
    print(*result[i])