'''
심술쟁이 수는 2,3,5의 곱으로 만들 수 있는 수이다. 다음과 같은 순서의 수가 11개의 심술쟁이 수이다.

1,2,3,4,5,6,8,9,10,12,15,....
처음 수는 1로 시작하도록 한다. 입력은 받지 않고, <number> 에 1500번째 심술쟁이 수가 출력되게 한다.

Sample Output

The 1500'th ugly number is <number>.
답

859963392
(1550번째는 1093500000, 십만번째는 290142196707511001929482240000000000000)
'''
"""
========================================================================
과제1. 숫자 2,3,5의 곱으로 만들 수 있는 수 작은 순서대로 11개를 출력하시오. 
      - 출력 : 1,2,3,4,5,6,8,9,10,12,15
========================================================================
"""

def q1():
      s = [2,3,5]                   # 초기 배열을 [2,3,5]로 설정
      for i in range(100):          # 충분히 큰 횟수로 for문 반복
            s.append(s[i]*2)        # s 배열의 i번째 요소에 2,3,5를 각각 곱하여 추가
            s.append(s[i]*3)
            s.append(s[i]*5)
            s = list(set(s))        # set로 자료형 변환 후 list로 자료형 변환하여 중복 제거
            s.sort()                # list s를 오름차순 정렬
      s.insert(0,1)                 # 0 번째 index에 1 추가
      print(s[0:11])                # 11개 수 출력


"""
========================================================================
과제2. 숫자 2,3,5의 곱으로 만들 수 있는 수를 오름차순으로 정렬할 경우 1550번째 값을 구하시오. 
      - 출력 : 1,093,500,000
========================================================================
"""
# 수를 나열할 필요없이 한개만을 출력하면 되므로 remove 함수를 써서 이전에 연산한 수를 삭제해줌
# 그러므로 for 문 내에서 s[i]를 곱할 필요없이 s[0]을 곱해서 append 해주면 됨
# 초기 배열 역시 [2,3,5]에서 s[1]로 바꿔줄 수 있었음

def q2():
      n=1550                        # n 값 반영
      s=[1]                         # s = [2,3,5] -> [1]
      for i in range(n-1):          
            s.append(s[0]*2)        # s[i] -> s[0]
            s.append(s[0]*3)
            s.append(s[0]*5)
            s = list(set(s))
            s.sort()
            s.remove(s[0])          # remove 함수 사용
      print(s[0])



if __name__ == '__main__':
      print('=====과제1=====')
      q1()
      print('=====과제2=====')
      q2()