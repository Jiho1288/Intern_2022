"""
전화번호의 표준형은 세 번째 번호와 네 번째 번호 사이에 하이픈(-)을 삽입한 7개의 숫자로 구성되어 있다. (예: 888-1200).
전화기의 키패드는 다음과 같은 글자 대 숫자의 대응을 지닌다.

A, B, C -> 2
D, E, F -> 3
G, H, I -> 4
J, K, L -> 5
M, N, O -> 6
P, R, S -> 7
T, U, V -> 8
W, X, Y -> 9
Q와 Z에 대한 대응관계는 존재하지 않는다. 하이픈은 전화기에 입력되지 않으며 필요에 따라 추가되거나 빠질 수 있다.
TUT-GLOP의 표준형은 888-4567이고, 310-GINO의 표준형은 310-4466, 3-10-10-10의 표준형은 310-1010이다.
만약 어떤 두 전화번호가 같은 표준형을 지니면 그들은 같은 번호이다.

여러분의 회사는 지역 회사원들의 전화번호를 정리하고 있다.
품질 관리 과정의 일환으로, 여러분은 정리된 전화번호부의 번호 중에 같은 것이 둘 이상 있지 않은지 확인하고 싶다.

Input
입력은 하나의 테스트 케이스로 구성된다. 입력의 첫 줄은 전화번호의 갯수(<=100,000)로 이뤄져 있다.
남은 줄들은 전화번호부 내의 전화번호들이 한 줄에 하나씩 들어 있다.
각 전화번호는 십진 숫자들과 대문자(Q,Z 제외), 하이픈으로 구성된 문자열로 이뤄져 있다.
문자열 내에서 정확히 7개의 문자들이 숫자 또는 알파벳 문자이다.

Output
한 번 이상 등장한 전화번호들이 출력을 구성한다. 각 줄은 표준형으로 표현된 전화번호와 출현 횟수가 하나의 공백 문자로 구분되어 있다.
출력되는 전화 번호들은 증가하는 사전식 순서로 되어 있어야 한다. 만약 입력으로 들어온 전화번호 중에 중복이 없다면 "No duplicates."를 출력한다.

Sample Input
12
4873279
ITS-EASY
888-4567
3-10-10-10
888-GLOP
TUT-GLOP
967-11-11
310-GINO
F101010
888-1200
-4-8-7-3-2-7-9-
487-3279

Sample Output
310-1010 2
487-3279 4
888-4567 3
"""
"""
=============================================================================
과제 1. 다음 전화번호를 표준형으로 변경하시오.
       - input : 310-GINO
       - 출력 : 310-4466
=============================================================================
"""
a = list(input('input:'))                                # 변수a에 input값을 받고 list로 변환
num = ['0','1','2','3','4','5','6','7','8','9']          # 0부터 9까지 num리스트에 저장
for i in range(len(a)):                                  # input받은 a요소의 길이만큼 for반복문 실행
    if a[i] in num:                                      # input받은 a값이 num에 속한 숫자이면 continue
        continue
    elif a[i]=='-':                                      # a[i]번째 요소가 -라면 continue
        continue
    else:                                                # a[i]번쨰 요소가 알파벳이라면 주어진 조건대로 처리
        if a[i]=='A' or a[i]=='B' or a[i]=='C':
            a[i]='2'
        elif a[i]=='D' or a[i]=='E' or a[i]=='F':
            a[i]='3'
        elif a[i]=='G' or a[i]=='H' or a[i]=='I':
            a[i]='4'
        elif a[i]=='J' or a[i]=='K' or a[i]=='L':
            a[i]='5'
        elif a[i]=='M' or a[i]=='N' or a[i]=='O':
            a[i]='6'
        elif a[i]=='P' or a[i]=='R' or a[i]=='S':
            a[i]='7'
        elif a[i]=='T' or a[i]=='U' or a[i]=='V':
            a[i]='8'
        elif a[i]=='W' or a[i]=='X' or a[i]=='Y':
            a[i]='9'
print(''.join(a))                                        # join함수를 이용하여 결과 출력

"""
=============================================================================
과제 2. input의 전화번호를 표준형으로 바꾸었을 때 표준형 전화번호의 등장횟수를 출력하시오. 
       - input = 4873279 888-4567 487-3279 4-8-7-32-79- 8884567 8-8-845-67
       - 출력 : 
        888-4567 3 
        487-3279 3
=============================================================================
"""
 
a=input('input:').split(' ')                  # a변수에 input값을 입력받고 split함수를 이용해 띄어쓰기 기준으로 나눠줌
b =[]
for j in range(len(a)):                       # a요소 길이만큼 for반복문 실행
    a_list=list(a[j])                         
    for i in range(a_list.count('-')):        # a_list에 속한 '-'의 개수만큼 for반복문 실행
        a_list.remove('-')                    # a_list에 속한 '-'제거
    a_list.insert(3,'-')                      # insert함수를 이용하여 3번째 자리에 '-'추가시켜줌
    b.append(''.join(a_list))                 # 미리 생성시켜둔 빈리스트b에 결과값 추가

c= list(set(b))                               # 결과값이 들어있는 리스트b에 중복을 제거하기 위해 set로 바꾼 후 다시 list로 바꿈
for i in range(len(c)):                       # len함수를 이용하여 c의 길이만큼 for반복문 실행
    print(c[i],b.count(c[i]))                 #결과값 출력

"""
=============================================================================
과제 3. input의 전화번호와 표준형으로 바꾸었을 때, 표준형 전화번호의 등장횟수를 출력하시오. 
       - 출력형식 : 표준형전화번호(공백)중복횟수를 한줄에 하나씩 출력하시오
       - 조건1 : 출력되는 표준형 전화번호는 오름차순으로 정렬하시오.
       - 조건2 : 중복 횟수가 1인 표준형 전화번호는 출력에서 제외하시오.
       - 조건3 : input()을 사용하여 처음에는 입력받을 전화번호의 수를 입력하고 그에 따라 전화번호를 입력받을 수 있도록 하시오.
       - input : 
         12 
         4873279
         ITS-EASY
         888-4567
         3-10-10-10
         888-GLOP
         TUT-GLOP
         967-11-11
         310-GINO
         F101010
         888-1200
         -4-8-7-3-2-7-9-
         487-3279
        
        출력 :
        310-1010 2
        487-3279 4
        888-4567 3
=============================================================================
"""

#과제1,과제2의 풀이과정을 합쳐서 과제3수행

num = int(input('input:\n'))              # 과제2  
k=[]
for i in range(num):
    k_input = input()
    k.append(k_input)

b =[]
for j in range(len(k)):
    k_list=list(k[j])
    for i in range(k_list.count('-')):
        k_list.remove('-')
    k_list.insert(3,'-')
    b.append(''.join(k_list))

d=[]

#---------------------------------------------------

for j in range(len(b)):                                 # 과제 1
    num2 = ['0','1','2','3','4','5','6','7','8','9']
    a = list(b[j])
    for i in range(len(a)):
        if a[i] in num2:
            continue
        elif a[i]=='-':
            continue
        else:
            if a[i]=='A' or a[i]=='B' or a[i]=='C':
                a[i]='2'
            elif a[i]=='D' or a[i]=='E' or a[i]=='F':
                a[i]='3'
            elif a[i]=='G' or a[i]=='H' or a[i]=='I':
                a[i]='4'
            elif a[i]=='J' or a[i]=='K' or a[i]=='L':
                a[i]='5'
            elif a[i]=='M' or a[i]=='N' or a[i]=='O':
                a[i]='6'
            elif a[i]=='P' or a[i]=='R' or a[i]=='S':
                a[i]='7'
            elif a[i]=='T' or a[i]=='U' or a[i]=='V':
                a[i]='8'
            elif a[i]=='W' or a[i]=='X' or a[i]=='Y':
                a[i]='9'
    d.append(''.join(a))

print("출력")
c= list(set(d))
for i in range(len(c)):
    if d.count(c[i])!=1:                              # 갯수가 1이 아닐경우 출력 조건문 추가
        print(c[i],d.count(c[i])) 
        