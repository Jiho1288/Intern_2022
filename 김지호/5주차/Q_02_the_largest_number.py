"""
음수가 아닌 수들이 주어졌을 때 그 수들을 이어서 만들 수 있는 가장 큰 수를 구하시오.

예를 들어 [1,2,3]이 주어졌을 때 만들 수 있는 가장 큰 수는 321이고, [3, 30, 34, 5, 9] 가 주어지면 만들 수 있는 가장 큰 수는 9534330이다.
"""
"""
========================================================================
과제1. 아래에 입력이 num_list로 주어졌을 때, 그 수들을 이어서 만들 수 있는 가장 큰 수인 출력값을 구하시오. 
      - 조건 1. 입력된 숫자들은 음수가 아닌 자연수
      - num_list = [1, 2, 3] 
      - 출력값 : 321
========================================================================
"""

def q1():
      num_list = input('num_list=').split(' ')    # input값을 입력받고 띄어쓰기 기준으로 나눠줌
      num_list.sort(reverse=True)                 # num_list에 저장된 값들을 내림차순으로 정리한 후
      print(''.join(num_list))                    # 결과값 출력


"""
========================================================================
과제2. 아래에 입력이 num_list로 주어졌을 때, 그 수들을 이어서 만들 수 있는 가장 큰 수인 출력값을 구하시오. 
      - 조건 1. 입력된 숫자들은 음수가 아닌 자연수
      - 조건 2. 아래와 같은 입력값을 도출하시오. 
      - num_list = [3, 30, 34, 5, 9] 
      - 출력값 : 9,534,330
========================================================================
"""
def q2():
      num_list = input('num_list=').split(' ')  # input값을 입력받은 후 split함수를 통해 띄어쓰기를 기준으로 나눠줌
      new_list = []                             # new_list라는 빈 리스트를 만들어주고
      num_dic = {}                              # num_dic이라는 빈 딕셔너리 생성
      for i in num_list:                        # for문을 통해 리스트에 존재하는 str으로 이루어진 숫자 i를
            new_list.append((i*4)[0:4])         # 4번 곱한 후 4번째 자리까지 슬라이싱하여 new_list에 저장
            num_dic[(i*4)[0:4]] = i             # 딕셔너리의 key에 변경된 i 값을 저장해주고 value에 기존의 i를 저장 
      new_list.sort(reverse=True)               # new_list를 내림차순 정렬

      result = []

      for j in new_list:                        # new_list를 딕셔너리의 key값인 기존 값으로 변경후
            result.append(num_dic[j])           # 결과 리스트에 저장후 출력

      print("".join(result))


if __name__ == "__main__":
    q1()
    q2()
    

